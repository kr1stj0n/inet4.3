[General]

network = ShQ

*.s1_numClients = 10 # number of clients in network
*.s2_numClients = 20 # number of clients in network
*.s3_numClients = 10 # number of clients in network
*.r1_numClients = 20 # number of clients in network
*.r2_numClients = 20 # number of clients in network

parallel-simulation = false
warnings = true
#sim-time-limit = 3.0s

#cmdenv-module-messages = true # for normal (non-express) mode only
cmdenv-event-banners = true   # for normal (non-express) mode only

#
# Network specific settings
#

# ARP settings
**.arp.typename = "GlobalArp"
**.arp.retryTimeout = 1s
**.arp.retryCount = 3
**.arp.cacheTimeout = 100s

**.tcp.delayedAcksEnabled     = false   # delayed ACK algorithm (RFC 1122) enabled/disabled
**.tcp.nagleEnabled           = false   # Nagle's algorithm (RFC 896) enabled/disabled
**.tcp.limitedTransmitEnabled = false   # Limited Transmit algorithm (RFC 3042) enabled/disabled (can be used for TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl)
**.tcp.increasedIWEnabled     = false   # Increased Initial Window (RFC 3390) enabled/disabled
**.tcp.sackSupport            = false   # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp.windowScalingSupport   = true    # Window Scale (RFC 1323) support (header option) (WS will be enabled for a connection if both endpoints support it)
**.tcp.timestampSupport       = false   # Timestamps (RFC 1323) support (header option) (TS will be enabled for a connection if both endpoints support it)
**.tcp.tcpAlgorithmClass      = "DcTcp" # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP
**.tcp.advertisedWindow       = 350000
**.tcp.recordStats            = true
**.tcp.mss                    = 1460
**.tcp.ecnWillingness = true
**.tcp.ecnEnabled = true
**.tcp.ect = true


## tcp apps
**.client*[*].numApps                = 1
**.clientr*[*].app[0].typename       = "TcpSinkApp"
**.clientr*[*].app[0].localPort      = 1000

**.clients*[*].app[0].typename       = "TcpSessionApp"
**.clients*[*].app[0].active         = true
**.clients*[*].app[0].localPort      = -1

**.clients*[*].app[0].tOpen          = 0s
**.clients*[*].app[0].tSend          = 1s
**.clients*[*].app[0].sendBytes      = 1MiB
**.clients*[*].app[0].sendScript     = ""
**.clients*[*].app[0].tClose         = 0s

**.clients1[*].app[0].connectAddress = "clientr1[" + string(parentIndex()) + "]"
**.clients2[*].app[0].connectAddress = "clientr2[" + string(parentIndex()) + "]"
**.clients3[*].app[0].connectAddress = "clientr1[" + string(parentIndex() + 10) + "]"
**.clients*[*].app[0].connectPort    = 1000

# thruput measurement settings
**.startTime = 1s     # start time
#**.batchSize = 50     # number of packets in a batch
#**.maxInterval = 1s   # max length of measurement interval (measurement ends
                      # if either batchsize or maxinterval is reached, whichever
                      # is reached first)

[Config ShQueue]

#**.eth[*].queueType = "ShQDropper"
**.routerCore[*].ppp[*].ppp.queue.typename     = "ShQDropperQueue"
**.routerCore[*].ppp[*].ppp.queue.shq.limit    = 1000
**.routerCore[*].ppp[*].ppp.queue.shq.interval = 0.01s
**.routerCore[*].ppp[*].ppp.queue.shq.maxp     = 0.1
**.routerCore[*].ppp[*].ppp.queue.shq.alpha    = 0.2
**.routerCore[*].ppp[*].ppp.queue.shq.datarate = 10Gbps
**.routerCore[*].ppp[*].ppp.queue.shq.useEcn   = true

**.routerCore[*].eth[*].mac.queue.typename     = "ShQDropperQueue"
**.routerCore[*].eth[*].mac.queue.shq.limit    = 1000
**.routerCore[*].eth[*].mac.queue.shq.interval = 0.01s
**.routerCore[*].eth[*].mac.queue.shq.maxp     = 0.1
**.routerCore[*].eth[*].mac.queue.shq.alpha    = 0.2
**.routerCore[*].eth[*].mac.queue.shq.datarate = 1Gbps
**.routerCore[*].eth[*].mac.queue.shq.useEcn   = true

[Config RedQueue]
#**.eth[*].queueType = "REDDropper"
**.routerCore[*].ppp[*].ppp.queue.typename	     = "RedDropperQueue"
**.routerCore[*].ppp[*].ppp.queue.red.useEcn	     = true
**.routerCore[*].ppp[*].ppp.queue.red.wq	     = 1.0
**.routerCore[*].ppp[*].ppp.queue.red.minth	     = 20
**.routerCore[*].ppp[*].ppp.queue.red.maxth	     = 60
**.routerCore[*].ppp[*].ppp.queue.red.maxp	     = 0.1
**.routerCore[*].ppp[*].ppp.queue.red.pkrate	     = 8333.333
**.routerCore[*].ppp[*].ppp.queue.red.packetCapacity = 1000

